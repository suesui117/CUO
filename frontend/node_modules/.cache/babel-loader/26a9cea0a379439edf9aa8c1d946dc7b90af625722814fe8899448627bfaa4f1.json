{"ast":null,"code":"var _jsxFileName = \"/Users/sue/Desktop/todo-app/frontend/src/components/TodoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoApp() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [user, setUser] = useState('');\n\n  // Load user and tasks from the backend\n  const loadTodosFromBackend = () => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      fetch(`http://localhost:5001/api/todos/${savedUser}`).then(response => response.json()).then(data => {\n        setUser(savedUser);\n        setTodos(data); // Set the tasks for that user from the backend\n      }).catch(error => console.error('Error fetching todos:', error));\n    }\n  };\n  useEffect(() => {\n    loadTodosFromBackend(); // Load todos when the component mounts\n  }, []);\n\n  // Add a task\n  const addTodo = () => {\n    const newTask = document.getElementById('taskInput').value;\n    if (newTask && user) {\n      const newTodo = {\n        task: newTask,\n        completed: false\n      };\n      fetch(`http://localhost:5001/api/todos/${user}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTodo)\n      }).then(response => response.json()).then(updatedTodos => {\n        setTodos(updatedTodos); // Update the tasks after adding a new one\n      }).catch(error => console.error('Error adding todo:', error));\n      document.getElementById('taskInput').value = ''; // Clear input field\n    }\n  };\n\n  // Delete a task\n  const deleteTodo = taskToDelete => {\n    if (user) {\n      fetch(`http://localhost:5001/api/todos/${user}/${taskToDelete}`, {\n        method: 'DELETE'\n      }).then(response => response.json()).then(updatedTodos => {\n        setTodos(updatedTodos); // Update the tasks after deleting a task\n      }).catch(error => console.error('Error deleting todo:', error));\n    }\n  };\n\n  // Toggle task completion\n  const toggleComplete = taskToToggle => {\n    if (user) {\n      fetch(`http://localhost:5001/api/todos/${user}/${taskToToggle}`, {\n        method: 'PATCH'\n      }).then(response => response.json()).then(updatedTodos => {\n        setTodos(updatedTodos); // Update the tasks after toggling completion\n      }).catch(error => console.error('Error toggling todo completion:', error));\n    }\n  };\n  const login = () => {\n    const username = document.getElementById('usernameInput').value;\n    if (username) {\n      localStorage.setItem('user', username); // Save the username\n      setUser(username); // Set the user in state\n      loadTodosFromBackend(); // Load tasks for that user from the backend\n    } else {\n      alert(\"Please enter a username\"); // If no username is provided, show an alert\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('user'); // Remove the user from localStorage\n    setUser(''); // Clear the user in state\n    setTodos([]); // Clear the tasks\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"usernameInput\",\n        type: \"text\",\n        placeholder: \"Enter username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", user, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"taskInput\",\n        type: \"text\",\n        placeholder: \"Enter a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            textDecoration: todo.completed ? 'line-through' : 'none'\n          },\n          children: [todo.task, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleComplete(todo._id),\n            children: todo.completed ? 'Undo' : 'Complete'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTodo(todo._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoApp, \"6wQx1sR45Q0iCDB/1/mGRPUpCDM=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoApp","_s","todos","setTodos","user","setUser","loadTodosFromBackend","savedUser","localStorage","getItem","fetch","then","response","json","data","catch","error","console","addTodo","newTask","document","getElementById","value","newTodo","task","completed","method","headers","body","JSON","stringify","updatedTodos","deleteTodo","taskToDelete","toggleComplete","taskToToggle","login","username","setItem","alert","logout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onClick","map","todo","index","style","textDecoration","_id","_c","$RefreshReg$"],"sources":["/Users/sue/Desktop/todo-app/frontend/src/components/TodoApp.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction TodoApp() {\n  const [todos, setTodos] = useState([]);\n  const [user, setUser] = useState('');\n\n  // Load user and tasks from the backend\n  const loadTodosFromBackend = () => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      fetch(`http://localhost:5001/api/todos/${savedUser}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setUser(savedUser);\n          setTodos(data);  // Set the tasks for that user from the backend\n        })\n        .catch((error) => console.error('Error fetching todos:', error));\n    }\n  };\n\n  useEffect(() => {\n    loadTodosFromBackend();  // Load todos when the component mounts\n  }, []);\n\n  // Add a task\n  const addTodo = () => {\n    const newTask = document.getElementById('taskInput').value;\n    if (newTask && user) {\n      const newTodo = { task: newTask, completed: false };\n      fetch(`http://localhost:5001/api/todos/${user}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newTodo),\n      })\n        .then((response) => response.json())\n        .then((updatedTodos) => {\n          setTodos(updatedTodos);  // Update the tasks after adding a new one\n        })\n        .catch((error) => console.error('Error adding todo:', error));\n      document.getElementById('taskInput').value = ''; // Clear input field\n    }\n  };\n\n  // Delete a task\n  const deleteTodo = (taskToDelete) => {\n    if (user) {\n      fetch(`http://localhost:5001/api/todos/${user}/${taskToDelete}`, {\n        method: 'DELETE',\n      })\n        .then((response) => response.json())\n        .then((updatedTodos) => {\n          setTodos(updatedTodos);  // Update the tasks after deleting a task\n        })\n        .catch((error) => console.error('Error deleting todo:', error));\n    }\n  };\n\n  // Toggle task completion\n  const toggleComplete = (taskToToggle) => {\n    if (user) {\n      fetch(`http://localhost:5001/api/todos/${user}/${taskToToggle}`, {\n        method: 'PATCH',\n      })\n        .then((response) => response.json())\n        .then((updatedTodos) => {\n          setTodos(updatedTodos);  // Update the tasks after toggling completion\n        })\n        .catch((error) => console.error('Error toggling todo completion:', error));\n    }\n  };\n\n  const login = () => {\n    const username = document.getElementById('usernameInput').value;\n    if (username) {\n      localStorage.setItem('user', username);  // Save the username\n      setUser(username);  // Set the user in state\n      loadTodosFromBackend();  // Load tasks for that user from the backend\n    } else {\n      alert(\"Please enter a username\"); // If no username is provided, show an alert\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('user');  // Remove the user from localStorage\n    setUser('');  // Clear the user in state\n    setTodos([]);  // Clear the tasks\n  };\n\n  return (\n    <div>\n      <h1>Todo App</h1>\n      {!user ? (\n        <div>\n          <input id=\"usernameInput\" type=\"text\" placeholder=\"Enter username\" />\n          <button onClick={login}>Log In</button>\n        </div>\n      ) : (\n        <div>\n          <p>Welcome, {user}!</p>\n          <button onClick={logout}>Log Out</button>\n        </div>\n      )}\n\n      {/* Todo input and tasks */}\n      {user && (\n        <>\n          <input id=\"taskInput\" type=\"text\" placeholder=\"Enter a new task\" />\n          <button onClick={addTodo}>Add Task</button>\n          <ul>\n            {todos.map((todo, index) => (\n              <li\n                key={index}\n                style={{\n                  textDecoration: todo.completed ? 'line-through' : 'none',\n                }}\n              >\n                {todo.task}\n                <button onClick={() => toggleComplete(todo._id)}>\n                  {todo.completed ? 'Undo' : 'Complete'}\n                </button>\n                <button onClick={() => deleteTodo(todo._id)}>Delete</button>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default TodoApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}